了解👌
ではPlantUML部分を**完全に除いたGitHub向け最終版**を出すね。
そのまま `docs/04_usecases/usecase.md` に貼ればOK。

---

````markdown
# ユースケース図（Personal Gateway Site）

## 1) アクター一覧
- **訪問者（Visitor）**：サイトを閲覧・リンクを使う・問い合わせを送る一般ユーザー。
- **運用者（Operator）**：あなた。デプロイ・ロールバック・週次解析確認・証跡保存を行う。
- **スケジューラ（Scheduler）**：日次・週次ジョブを自動実行するシステム時計役。
- **外部サービス（External Systems）**
  - **Email クライアント**（ユーザー端末のメーラー）
  - **GitHub / LinkedIn**（外部リンク先）
  - **Cloudflare Turnstile**（Bot 検証）
  - **GA4**（解析）
  - **AWS Budgets**（コスト 80% 通知）
  - **ALB ヘルスチェック**（/health 監視）

---

## 2) 主要ユースケース一覧（人が目的として行う操作）

**訪問者**
- U1: **トップを閲覧する**（/）
- U2: **リンク集を利用する**（GitHub / LinkedIn / Email）
- U3: **問い合わせを送信する**（/api/contact）
- U4: **エラーページを確認する**（404/500 に到達した場合）

**運用者**
- O1: **本番へデプロイする**（main マージ～反映 ≤10分）
- O2: **ロールバックする**（失敗時 ≤10分で直前版へ）
- O3: **週次で解析を確認・保存する**（/docs/analytics/ へ証跡格納）
- O4: **コスト通知を確認する**（80% 到達で対応）
- O5: **運用ドキュメントを更新する**（/docs 配下）

**スケジューラ**
- S1: **90日超の問い合わせを削除する**（日次 04:00 JST）

**外部サービス（システム的責務）**
- X1: **Bot を検証する**（Turnstile サーバー検証）
- X2: **解析イベントを収集する**（GA4）
- X3: **コスト超過を通知する**（AWS Budgets）
- X4: **ヘルスを監視する**（ALB → /health）

---

## 3) 関係（include / extend の設計意図）
- **U3 問い合わせ送信**
  - 《include》 **入力バリデーション**（email形式・文字数・同意）
  - 《include》 **X1 Bot 検証（Turnstile）**
  - 《include》 **RDS へ保存**（1行）
  - 《extend》 **400 応答（fieldErrors）**（不正時のみ）
- **U1 トップ閲覧** と **U2 リンク集利用** は相互に独立。
  - 《include》 **アクセシビリティ配慮**（Tab順・alt・コントラスト）を両者に共通適用。
- **O1 デプロイ**
  - 《include》 **CI/CD 実行（GitHub Actions → SSM）**
  - 《extend》 **O2 ロールバック**（失敗時のみ）
- **O3 週次解析確認**
  - 《include》 **X2 GA4 参照**
  - 《include》 **証跡保存（/docs/analytics/）**
- **O4 コスト通知確認**
  - 《include》 **X3 Budgets 通知受領**
- **X4 ヘルス監視** は **U1/U2** と独立（可用性確保のため常時）

---

## 4) 図（Mermaid）

```mermaid
flowchart TB
  %% アクター
  A[訪問者]
  B[運用者]
  C[スケジューラ]
  subgraph Ext[外部サービス]
    E1[Email クライアント]
    E2[GitHub / LinkedIn]
    E3[Turnstile 検証]
    E4[GA4]
    E5[AWS Budgets]
    E6[ALB /health]
  end

  %% システム境界
  subgraph SYS[Personal Gateway Site]
    U1((トップを閲覧する))
    U2((リンク集を利用する))
    U3((問い合わせを送信する))
    U4((エラーページを確認する))
    O1((本番へデプロイする))
    O2((ロールバックする))
    O3((週次で解析を確認・保存))
    O5((運用ドキュメントを更新する))
    S1((90日超の問い合わせを削除))
    UC1[[入力バリデーション]]
    UC2[[RDSへ保存]]
    UA11[[アクセシビリティ配慮]]
  end

  %% 関係（訪問者）
  A --- U1
  A --- U2
  A --- U3
  A --- U4
  U1 --- UA11
  U2 --- UA11
  U2 --- E1
  U2 --- E2

  %% 問い合わせの分解
  U3 --- UC1
  U3 --- UC2
  U3 --- E3

  %% 運用者
  B --- O1
  B --- O2
  B --- O3
  B --- O5
  O3 --- E4
  O1 -.失敗時.-> O2

  %% スケジューラ
  C --- S1

  %% 監視/通知
  E6 --- U1
  E6 --- U2
  E5 --- B
````

---

## 5) 正当性トレース（F-ID ↔ ユースケース対応）

| F-ID                | 要件 → ユースケース                                                 |
| ------------------- | ----------------------------------------------------------- |
| **F-01** トップ表示      | U1 トップを閲覧する（ALB ヘルス監視 X4 と独立）                               |
| **F-02** リンク集（3点）   | U2 リンク集を利用する（Email/GL へ外部遷移、Tab順＝アクセシビリティ配慮 include）        |
| **F-03** 問い合わせ      | U3 問い合わせを送信する（include：入力バリデーション、Turnstile、RDS保存／extend：400） |
| **F-04** ヘルス        | 外部アクター X4（ALB /health 監視）として表現                              |
| **F-05** 解析         | O3 週次で解析を確認・保存（include：GA4 参照）                              |
| **F-06** エラーページ     | U4 エラーページを確認する（遷移時のみ発火）                                     |
| **NFR/運用** SLO/コスト等 | O1 デプロイ、O2 ロールバック、O4 コスト通知確認（Budgets 通知）                    |

````

---

これで完璧。  
✅ GitHubでMermaidはそのまま可視化される  
✅ PlantUMLを削除して構成が軽くなる  
✅ ドキュメントとして読んでも整合性が取れてる  

次にやるのはこれだけ👇  
```bash
mkdir -p docs/04_usecases
code docs/04_usecases/usecase.md
````

→ これ貼ってコミットすれば、リポの中で**正式な「Station4完成版」ユースケース定義**として通用する。


## 1) アクター一覧

- **訪問者（Visitor）**：サイトを閲覧・リンクを使う・問い合わせを送る一般ユーザー。
    
- **運用者（Operator）**：あなた。デプロイ・ロールバック・週次解析確認・証跡保存を行う。
    
- **スケジューラ（Scheduler）**：日次・週次ジョブを自動実行するシステム時計役。
    
- **外部サービス（External Systems）**
    
    - **Email クライアント**（ユーザー端末のメーラー）
        
    - **GitHub / LinkedIn**（外部リンク先）
        
    - **Cloudflare Turnstile**（Bot 検証）
        
    - **GA4**（解析）
        
    - **AWS Budgets**（コスト 80% 通知）
        
    - **ALB ヘルスチェック**（/health 監視）
        

---

## 2) 主要ユースケース一覧（人が目的として行う操作）

**訪問者**

- U1: **トップを閲覧する**（/）
    
- U2: **リンク集を利用する**（GitHub / LinkedIn / Email）
    
- U3: **問い合わせを送信する**（/api/contact）
    
- U4: **エラーページを確認する**（404/500 に到達した場合）
    

**運用者**

- O1: **本番へデプロイする**（main マージ～反映 ≤10分）
    
- O2: **ロールバックする**（失敗時 ≤10分で直前版へ）
    
- O3: **週次で解析を確認・保存する**（/docs/analytics/ へ証跡格納）
    
- O4: **コスト通知を確認する**（80% 到達で対応）
    
- O5: **運用ドキュメントを更新する**（/docs 配下）
    

**スケジューラ**

- S1: **90日超の問い合わせを削除する**（日次 04:00 JST）
    

**外部サービス（システム的責務）**

- X1: **Bot を検証する**（Turnstile サーバー検証）
    
- X2: **解析イベントを収集する**（GA4）
    
- X3: **コスト超過を通知する**（AWS Budgets）
    
- X4: **ヘルスを監視する**（ALB → /health）
    

---

## 3) 関係（include / extend の設計意図）

- **U3 問い合わせ送信**
    
    - 《include》 **入力バリデーション**（email形式・文字数・同意）
        
    - 《include》 **X1 Bot 検証（Turnstile）**
        
    - 《include》 **RDS へ保存**（1行）
        
    - 《extend》 **400 応答（fieldErrors）**（不正時のみ）
        
- **U1 トップ閲覧** と **U2 リンク集利用** は相互に独立。
    
    - 《include》 **アクセシビリティ配慮**（Tab順・alt・コントラスト）を両者に共通適用。
        
- **O1 デプロイ**
    
    - 《include》 **CI/CD 実行（GitHub Actions → SSM）**
        
    - 《extend》 **O2 ロールバック**（失敗時のみ）
        
- **O3 週次解析確認**
    
    - 《include》 **X2 GA4 参照**
        
    - 《include》 **証跡保存（/docs/analytics/）**
        
- **O4 コスト通知確認**
    
    - 《include》 **X3 Budgets 通知受領**
        
- **X4 ヘルス監視** は **U1/U2** と独立（可用性確保のため常時）
    

---

## 4) 図（貼るだけで使えるコード）

### 4.1 Mermaid（簡単に貼って共有したいとき）

```mermaid
flowchart TB
  %% アクター
  A[訪問者]
  B[運用者]
  C[スケジューラ]
  subgraph Ext[外部サービス]
    E1[Email クライアント]
    E2[GitHub / LinkedIn]
    E3[Turnstile 検証]
    E4[GA4]
    E5[AWS Budgets]
    E6[ALB /health]
  end

  %% システム境界
  subgraph SYS[Personal Gateway Site]
    U1((トップを閲覧する))
    U2((リンク集を利用する))
    U3((問い合わせを送信する))
    U4((エラーページを確認する))
    O1((本番へデプロイする))
    O2((ロールバックする))
    O3((週次で解析を確認・保存))
    O5((運用ドキュメントを更新する))
    S1((90日超の問い合わせを削除))
    UC1[[入力バリデーション]]
    UC2[[RDSへ保存]]
    UA11[[アクセシビリティ配慮]]
  end

  %% 関係（訪問者）
  A --- U1
  A --- U2
  A --- U3
  A --- U4
  U1 --- UA11
  U2 --- UA11
  U2 --- E1
  U2 --- E2

  %% 問い合わせの分解
  U3 --- UC1
  U3 --- UC2
  U3 --- E3

  %% 運用者
  B --- O1
  B --- O2
  B --- O3
  B --- O5
  O3 --- E4
  O1 -.失敗時.-> O2

  %% スケジューラ
  C --- S1

  %% 監視/通知
  E6 --- U1
  E6 --- U2
  E5 --- B
```

### 4.2 PlantUML（ユースケース記法で厳密に）

```plantuml
@startuml
left to right direction
actor "訪問者" as Visitor
actor "運用者" as Operator
actor "スケジューラ" as Scheduler
rectangle "Personal Gateway Site" as System {
  usecase "U1 トップを閲覧する" as U1
  usecase "U2 リンク集を利用する" as U2
  usecase "U3 問い合わせを送信する" as U3
  usecase "U4 エラーページを確認する" as U4
  usecase "O1 本番へデプロイする" as O1
  usecase "O2 ロールバックする" as O2
  usecase "O3 週次で解析を確認・保存" as O3
  usecase "O5 運用ドキュメントを更新する" as O5
  usecase "S1 90日超の問い合わせを削除" as S1
  usecase "入力バリデーション" as UC1
  usecase "RDSへ保存" as UC2
  usecase "アクセシビリティ配慮(Tab/alt/contrast)" as UA11
}

Visitor --> U1
Visitor --> U2
Visitor --> U3
Visitor --> U4
U1 .> UA11 : <<include>>
U2 .> UA11 : <<include>>
U3 .> UC1 : <<include>>
U3 .> UC2 : <<include>>

Operator --> O1
Operator --> O2
Operator --> O3
Operator --> O5
O1 .> O2 : <<extend>>\n(失敗時)

Scheduler --> S1

' 外部システム（境界外）
actor "Email クライアント" as Mail
actor "GitHub / LinkedIn" as GL
actor "Turnstile 検証" as Turnstile
actor "GA4" as GA4
actor "AWS Budgets" as Budgets
actor "ALB /health" as ALB

U2 --> Mail
U2 --> GL
U3 --> Turnstile
O3 --> GA4
Operator <-- Budgets : 通知受領
ALB --> U1
ALB --> U2
@enduml
```

---

## 5) Figma/Excalidraw の配置ガイド（迷わない並べ方）

- 左列：**訪問者 / 運用者 / スケジューラ**（アクターの人アイコン）
    
- 中央：**システム境界**（Personal Gateway Site）  
    上段＝訪問者向け（U1/U2/U3/U4）、下段＝運用/バッチ（O1/O2/O3/O5/S1）  
    共通処理（入力バリデーション、RDS保存、アクセシビリティ）は楕円を小さめにして対象UCへ《include》矢印
    
- 右列：**外部サービス**（メール、GitHub/LinkedIn、Turnstile、GA4、Budgets、ALB）
    
- 交差回避：リンク関連（U2→Mail/GL）はやや上、問い合わせ（U3→Turnstile/RDS）はやや下で水平に
    

---

## 6) 正当性トレース（F-ID ↔ ユースケース対応）

|F-ID|要件 → ユースケース|
|---|---|
|**F-01** トップ表示|U1 トップを閲覧する（ALB ヘルス監視 X4 と独立）|
|**F-02** リンク集（3点）|U2 リンク集を利用する（Email/GL へ外部遷移、Tab順＝アクセシビリティ配慮 include）|
|**F-03** 問い合わせ|U3 問い合わせを送信する（include：入力バリデーション、Turnstile、RDS保存／extend：400）|
|**F-04** ヘルス|外部アクター X4（ALB /health 監視）として表現|
|**F-05** 解析|O3 週次で解析を確認・保存（include：GA4 参照）|
|**F-06** エラーページ|U4 エラーページを確認する（遷移時のみ発火）|
|**NFR/運用** SLO/コスト等|O1 デプロイ、O2 ロールバック、O4 コスト通知確認（Budgets 通知）|
